{"version":3,"sources":["component/Timeline.js","component/ArcSlider.js","component/Settings.js","component/HeadTitle.js","component/App.js","reportWebVitals.js","index.js"],"names":["dateConvert","date","Math","floor","year","month","day","human","epoch","Timeline","props","state","totalHeight","events","i","this","arcs","length","push","constants","start","on","araragi","narrator","arc","end","sort","a","b","dates","cur_date","blocks_date","blocks_araragi","blocks_other","cur_araragi","cur_other","pre_date_height","date_height","ex_araragi_bump","ex_other_bump","bump","e","exjump","height","j","top","hide","spoiler","spoilerArcsSeen","other","blocks","getBlocks","console","log","items_date","items_araragi","items_other","className","style","lineHeight","hideName","useLNTitle","entry","ln","sname","indexOf","anime","backgroundColor","characters","focus","tint","name","textAlign","React","Component","makeStyles","outer","width","display","inner","Settings","onArcClick","index","setViewArcs","arcsOrder","slice","handleChange","target","value","toggleSpoiler","updateSpoilerVal","setSpoiler","setUseLNTitle","onClick","spoilerArcsFuture","arcsFuture","onChange","HeadTitle","App","componentDidMount","updateDimensions","window","addEventListener","componentWillUnmount","removeEventListener","windowWidth","innerWidth","windowHeight","innerHeight","setState","setArcsOrder","Array","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5cbc332.chunk.js","sourcesContent":["import { ArchiveSharp, FormatAlignRight } from '@material-ui/icons';\r\nimport { configure } from '@testing-library/react';\r\nimport React from 'react';\r\nimport constants from '../resources/constants.json';\r\n\r\nimport './Timeline.scss';\r\n\r\nfunction dateConvert(date) {\r\n    date = Math.floor(date);\r\n    let year = Math.floor(date / 10000);\r\n    let month = Math.floor((date - (year * 10000)) / 100);\r\n    let day = date - (year * 10000) - (month * 100);\r\n\r\n    let human = \"\";\r\n    let epoch = -84 + (356 * (year - 1)) + day;\r\n\r\n    switch (month) {\r\n        case 1:\r\n            human += \"Jan \";\r\n            epoch += 0;\r\n            break;\r\n        case 2:\r\n            human += \"Feb \";\r\n            epoch += 31;\r\n            break;\r\n        case 3:\r\n            human += \"Mar \";\r\n            epoch += 28;\r\n            break;\r\n        case 4:\r\n            human += \"Apr \";\r\n            epoch += 31;\r\n            break;\r\n        case 5:\r\n            human += \"May \";\r\n            epoch += 30;\r\n            break;\r\n        case 6:\r\n            human += \"Jun \";\r\n            epoch += 31;\r\n            break;\r\n        case 7:\r\n            human += \"Jul \";\r\n            epoch += 30;\r\n            break;\r\n        case 8:\r\n            human += \"Aug \";\r\n            epoch += 31;\r\n            break;\r\n        case 9:\r\n            human += \"Sep \";\r\n            epoch += 31;\r\n            break;\r\n        case 10:\r\n            human += \"Oct \";\r\n            epoch += 30;\r\n            break;\r\n        case 11:\r\n            human += \"Nov \";\r\n            epoch += 31;\r\n            break;\r\n        case 12:\r\n            human += \"Dec \";\r\n            epoch += 30;\r\n            break;\r\n    }\r\n    human += day;\r\n    return {human, epoch};\r\n}\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalHeight: 100\r\n        };\r\n    }\r\n\r\n    getBlocks() {\r\n        // Collect every arc start or end in sorted order\r\n        let events = [];\r\n        for (let i = 0; i < this.props.arcs.length; i++) {\r\n            events.push({\r\n                date: constants.arcs[this.props.arcs[i]].start,\r\n                on: true,\r\n                araragi: constants.arcs[this.props.arcs[i]].narrator == 0,\r\n                arc: this.props.arcs[i]\r\n            });\r\n            events.push({\r\n                date: constants.arcs[this.props.arcs[i]].end,\r\n                on: false,\r\n                araragi: constants.arcs[this.props.arcs[i]].narrator == 0,\r\n                arc: this.props.arcs[i]\r\n            });\r\n        }\r\n        events.sort(function(a, b) {\r\n            return a.date - b.date;\r\n        });\r\n\r\n        // get events on a per-day basis\r\n        let dates = [];\r\n        let cur_date = 0;\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (Math.floor(events[i].date) != cur_date) {\r\n                dates.push({\r\n                    date: Math.floor(events[i].date),\r\n                    events: []\r\n                });\r\n                cur_date = Math.floor(events[i].date);\r\n            }\r\n            dates[dates.length - 1].events.push(events[i]);\r\n        }\r\n\r\n        let blocks_date = [];\r\n        let blocks_araragi = [];\r\n        let blocks_other = [];\r\n        \r\n        let cur_araragi = null;\r\n        let cur_other = null;\r\n\r\n        let pre_date_height = 0;\r\n\r\n        for (let i = 0; i < dates.length; i++) {\r\n            let date_height = 0;\r\n            let cur_subdate = dates[i].events[0].date;\r\n            let ex_araragi_bump = false;\r\n            let ex_other_bump = false;\r\n\r\n            let bump = function(e) {\r\n                let exjump = 0;\r\n                if(ex_araragi_bump) {\r\n                    if (e && e.on && e.araragi) {\r\n                        exjump = 1;\r\n                        ex_other_bump = false;\r\n                    }\r\n                    ex_araragi_bump = false;\r\n                }\r\n                if(ex_other_bump) {\r\n                    if (e && e.on && !e.araragi) {\r\n                        exjump = 1;\r\n                    }\r\n                    ex_other_bump = false;\r\n                }\r\n                date_height += 1 //+ exjump;\r\n                if (cur_araragi) cur_araragi.height += 1 + exjump;\r\n                if (cur_other) cur_other.height += 1 + exjump;\r\n                \r\n            }\r\n\r\n            for (let j = 0; j < dates[i].events.length; j++) {\r\n                let e = dates[i].events[j];\r\n\r\n                if (e.on) {\r\n                    if (e.araragi) {\r\n                        cur_araragi = {\r\n                            arc: e.arc,\r\n                            height: 0,\r\n                            top: pre_date_height + date_height,\r\n                            hide: (this.props.spoiler.spoilerArcsSeen && constants.arcs[e.arc].spoiler)\r\n                        };\r\n                    } else {\r\n                        cur_other = {\r\n                            arc: e.arc,\r\n                            height: 0,\r\n                            top: pre_date_height + date_height,\r\n                            hide: (this.props.spoiler.spoilerArcsSeen && constants.arcs[e.arc].spoiler)\r\n                        };\r\n                    }\r\n                } else {\r\n                    if (date_height == 0 || (cur_araragi && cur_araragi.height == 0) || (cur_other && cur_other.height == 0)) {\r\n                        bump(e);\r\n                    }\r\n                    if (e.araragi) {\r\n                        blocks_araragi.push(cur_araragi);\r\n                        cur_araragi = null;\r\n                        ex_araragi_bump = true;\r\n                    } else {\r\n                        blocks_other.push(cur_other);\r\n                        cur_other = null;\r\n                        ex_other_bump = true;\r\n                    }\r\n                }\r\n            }\r\n            if (date_height == 0 || (cur_araragi && cur_araragi.height == 0) || (cur_other && cur_other.height == 0)) {\r\n                bump();\r\n            }\r\n            blocks_date.push({\r\n                date: dates[i].date,\r\n                top: pre_date_height,\r\n                height: date_height\r\n            });\r\n            pre_date_height += date_height;\r\n        }\r\n\r\n        \r\n        return {date: blocks_date, araragi: blocks_araragi, other: blocks_other, height: pre_date_height};\r\n    }\r\n\r\n    render() {\r\n        let blocks = this.getBlocks();\r\n        console.log(blocks);\r\n\r\n        let items_date = [];\r\n        let items_araragi = [];\r\n        let items_other = [];\r\n\r\n        for (let i = 0; i < blocks.date.length; i++) {\r\n            items_date.push(\r\n                <div className=\"timeline-date\" key={\"d\" + i} style={{\r\n                    top: (15 * blocks.date[i].top),\r\n                    lineHeight: (15 * blocks.date[i].height) - 6 + 'px',\r\n                    height: (15 * blocks.date[i].height) - 6 + 'px'\r\n                }}>{dateConvert(blocks.date[i].date).human}</div>\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < blocks.araragi.length; i++) {\r\n            let hideName = \"\";\r\n            if (this.props.useLNTitle) {\r\n                let entry = constants.ln[constants.arcs[blocks.araragi[i].arc].ln];\r\n                hideName = entry.sname + \" Arc \" + (entry.arcs.indexOf(blocks.araragi[i].arc) + 1);\r\n            } else {\r\n                let entry = constants.anime[constants.arcs[blocks.araragi[i].arc].anime];\r\n                hideName = entry.sname + \" Arc \" + (entry.arcs.indexOf(blocks.araragi[i].arc) + 1);\r\n            }\r\n            items_araragi.push(\r\n                <div className=\"timeline-arc\" key={\"a\" + i} style={{\r\n                    top: (15 * blocks.araragi[i].top),\r\n                    lineHeight: (15 * blocks.araragi[i].height) - 2 + 'px',\r\n                    height: (15 * blocks.araragi[i].height) - 2 + 'px',\r\n                    backgroundColor: blocks.araragi[i].hide ? \"#443333\" : constants.characters[constants.arcs[blocks.araragi[i].arc].focus].tint + \"44\"\r\n                }}>{blocks.araragi[i].hide ? hideName : constants.arcs[blocks.araragi[i].arc].name}</div>\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < blocks.other.length; i++) {\r\n            let hideName = \"\";\r\n            if (this.props.useLNTitle) {\r\n                let entry = constants.ln[constants.arcs[blocks.other[i].arc].ln];\r\n                hideName = entry.sname + \" Arc \" + (entry.arcs.indexOf(blocks.other[i].arc) + 1);\r\n            } else {\r\n                let entry = constants.anime[constants.arcs[blocks.other[i].arc].anime];\r\n                hideName = entry.sname + \" Arc \" + (entry.arcs.indexOf(blocks.other[i].arc) + 1);\r\n            }\r\n            items_other.push(\r\n                <div className=\"timeline-arc\" key={\"o\" + i} style={{\r\n                    top: (15 * blocks.other[i].top),\r\n                    lineHeight: (15 * blocks.other[i].height) - 2 + 'px',\r\n                    height: (15 * blocks.other[i].height) - 2 + 'px',\r\n                    backgroundColor: blocks.other[i].hide ? \"#443333\" : constants.characters[constants.arcs[blocks.other[i].arc].focus].tint + \"66\",\r\n                    textAlign: 'right'\r\n                }}>{blocks.other[i].hide ? hideName : constants.arcs[blocks.other[i].arc].name}</div>\r\n            );\r\n        }\r\n\r\n        let araragi = [];\r\n        let other = [];\r\n\r\n        if (blocks.araragi.length) {\r\n            araragi.push(\r\n                <div className=\"timeline-line\" style={{height: 15 * blocks.height}}></div>\r\n            );\r\n            araragi.push(\r\n                <div className=\"timeline-arcgap\" style={{height: 15 * blocks.height}}>\r\n                    {items_araragi}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (blocks.other.length) {\r\n            other.push(\r\n                <div className=\"timeline-arcgap\" style={{height: 15 * blocks.height}}>\r\n                    {items_other}\r\n                </div>\r\n            );\r\n            other.push(\r\n                <div className=\"timeline-line\" style={{height: 15 * blocks.height}}></div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"Timeline\">\r\n                <div className=\"timeline-inner\">\r\n                    {other}\r\n                    <div className=\"timeline-dategap\" style={{height: 15 * blocks.height}}>\r\n                        {items_date}\r\n                    </div>\r\n                    {araragi}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport constants from '../resources/constants.json';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    outer: {\r\n        'min-height': 550,\r\n        height: '100vh',\r\n        width: 152,\r\n        display: 'block'\r\n    },\r\n    inner: {\r\n        'margin-left': -20,\r\n        height: 'calc(100% - 42px)',\r\n        'padding': '21px 0px',\r\n        width: 100,\r\n        display: 'block'\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function VerticalSlider(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.outer}>\r\n            <div className={classes.inner}>\r\n                <Slider\r\n                    orientation={\"vertical\"}\r\n                    defaultValue={36}\r\n                    track={\"inverted\"}\r\n                    min={0}\r\n                    max={36}\r\n                    step={1}\r\n                    marks={props.getMarks()}\r\n                    onChange={props.updateArcs}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport constants from '../resources/constants.json';\r\n\r\nimport Slider from '@material-ui/core/Button';\r\n\r\nimport './Settings.scss';\r\nimport ArcSlider from './ArcSlider';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    onArcClick = (index) => {\r\n        this.props.setViewArcs(this.props.arcsOrder.slice(0, index));\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.onArcClick(e.target.value);\r\n    }\r\n\r\n    toggleSpoiler = (spoiler) => {\r\n        return () => {\r\n            let updateSpoilerVal = this.props.spoiler;\r\n            updateSpoilerVal[spoiler] = !this.props.spoiler[spoiler];\r\n            this.props.setSpoiler(updateSpoilerVal);\r\n        }\r\n    }\r\n\r\n    setUseLNTitle = (ln) => {\r\n        return () => {\r\n            this.props.setUseLNTitle(ln);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Settings\">\r\n                <div className=\"settings-label\">\r\n                    Hide arcs that are\r\n                </div>\r\n                <div className=\"settings-opts\">\r\n                    <div className={this.props.spoiler.spoilerArcsSeen ? \"settings-toggle-active\" : \"settings-toggle\"} onClick={this.toggleSpoiler(\"spoilerArcsSeen\")}>\r\n                        Seen Spoiler Arcs\r\n                    </div>\r\n                    <div className={this.props.spoiler.spoilerArcsFuture ? \"settings-toggle-active\" : \"settings-toggle\"} onClick={this.toggleSpoiler(\"spoilerArcsFuture\")}>\r\n                        Future Spoiler Arcs\r\n                    </div>\r\n                    <div className={this.props.spoiler.arcsFuture ? \"settings-toggle-active\" : \"settings-toggle\"} onClick={this.toggleSpoiler(\"arcsFuture\")}>\r\n                        Future Arcs\r\n                    </div>\r\n                </div>\r\n                <div className=\"settings-label\">\r\n                    Prefer\r\n                </div>\r\n                <div className=\"settings-opts\">\r\n                    <div className={this.props.useLNTitle ? \"settings-toggle\" : \"settings-toggle-active\"} onClick={this.setUseLNTitle(false)}>\r\n                        Anime Season Titles\r\n                    </div>\r\n                    <div className={this.props.useLNTitle ? \"settings-toggle-active\" : \"settings-toggle\"} onClick={this.setUseLNTitle(true)}>\r\n                        LN Titles\r\n                    </div>\r\n                </div>\r\n                <input onChange={this.handleChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nimport './HeadTitle.scss';\r\n\r\nclass HeadTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"HeadTitle\"\r\n            >\r\n                Monogatari Series Interactive Timeline\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeadTitle;\r\n","import React from 'react';\nimport constants from '../resources/constants.json';\n\nimport Timeline from './Timeline';\nimport Settings from './Settings';\nimport HeadTitle from './HeadTitle';\n\nimport './App.scss';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            windowWidth: 1080,\n            windowHeight: 937,\n            arcsOrder: [...Array(constants.arcs.length).keys()],\n            arcs: [],\n            spoiler: {\n                spoilerArcsFuture: true,\n                spoilerArcsSeen: true,\n                arcsFuture: true\n            },\n            useLNTitle: false\n        }\n    }\n\n    componentDidMount = () => {\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n      }\n    \n      componentWillUnmount = () => {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n      }\n    \n      updateDimensions = () => {\n        let windowWidth = typeof window !== \"undefined\" ? window.innerWidth : 0;\n        let windowHeight = typeof window !== \"undefined\" ? window.innerHeight : 0;\n    \n        this.setState({ windowWidth, windowHeight });\n      }\n\n    setArcsOrder = (arcsOrder) => {\n        if (!arcsOrder) {\n            this.setState({arcsOrder: [...Array(constants.arcs.length).keys()]})\n        } else {\n            this.setState({arcsOrder: arcsOrder});\n        }\n    }\n\n    setSpoiler = (spoiler) => {\n        this.setState({spoiler: spoiler});\n    }\n\n    setViewArcs = (arcs) => {\n        this.setState({arcs: arcs});\n    }\n\n    setUseLNTitle = (useLNTitle) => {\n        this.setState({useLNTitle: useLNTitle});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"app-left\">\n                    <HeadTitle/>\n                    <Settings\n                        arcsOrder={this.state.arcsOrder}\n                        spoiler={this.state.spoiler}\n                        useLNTitle={this.state.useLNTitle}\n                        setUseLNTitle={this.setUseLNTitle}\n                        setArcsOrder={this.setArcsOrder}\n                        setSpoiler={this.setSpoiler}\n                        setViewArcs={this.setViewArcs}\n                    />\n                </div>\n                <Timeline\n                    arcs={this.state.arcs}\n                    spoiler={this.state.spoiler}\n                    useLNTitle={this.state.useLNTitle}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}